---
- name: tomcat install on ubuntu
  hosts: all
  become: yes
  vars:
    java_package_name: openjdk-11-jdk
    group_name: tomcat
    user_name: tomcat
    user_home: /opt/tomcat
    user_shell: /bin/false
    tomcat_version: 10.1.4
    tomcat_major_version: 10
  tasks:
    - name: openjdk-11-jdk install
      ansible.builtin.apt:
        name: "{{ java_package_name }}"
        update_cache: true
        state: present
    - name: add tomcat group
      ansible.builtin.group:
        name: "{{ group_name }}"
        state: present
    - name: add tomcat user
      ansible.builtin.user:
        name: "{{ user_name }}"
        create_home: true
        home: "{{ user_home }}"
        shell: "{{ user_shell }}"
        group: "{{ group_name }}"
        state: present
    - name: download & extract tomcat tar.gz file
      ansible.builtin.unarchive:
        src: "https://www-eu.apache.org/dist/tomcat/tomcat-{{ tomcat_major_version }}/v{{ tomcat_version }}/bin/apache-tomcat-{{ tomcat_version }}.tar.gz"
        remote_src: yes
        dest: "{{ user_home }}"
    - name: create symbolik link
      ansible.builtin.file:
        src: "{{ user_home }}/apache-tomcat-{{ tomcat_version }}"
        dest: "{{ user_home }}/latest"
        owner: "{{ user_name }}"
        group: "{{ group_name }}"
        state: link
    - name: change ownership
      ansible.builtin.file:
        dest: "{{ user_home }}"
        recurse: yes
        owner: "{{ user_name }}"
        group: "{{ group_name }}"
        state: directory
    - name: executing shell script
      ansible.builtin.shell: "sudo sh -c 'chmod +x {{ user_home }}/latest/bin/*.sh'"
    - name: Creating SystemD Unit File
      ansible.builtin.copy:
        src: tomcat.service
        dest: /etc/systemd/system/tomcat.service
        owner: "{{ user_name }}"
        group: "{{ group_name }}"
    - name: deamon reload
      ansible.builtin.systemd:
        name: tomcat
        daemon_reload: true
        enabled: true
        state: started
    - name: adding tomcat users files
      ansible.builtin.copy:
        src: tomcat-users.xml
        dest: "{{ user_home }}/latest/conf/tomcat-users.xml"
        owner: "{{ user_name }}"
        group: "{{ group_name }}"
    - name: adding manager
      ansible.builtin.copy:
        src: context.xml
        dest: "{{ user_home }}/latest/webapps/manager/META-INF/context.xml"
        owner: "{{ user_name }}"
        group: "{{ group_name }}"
    - name: adding host manager
      ansible.builtin.copy:
        src: hostmanager-context.xml
        dest: "{{ user_home }}/latest/webapps/host-manager/META-INF/context.xml"
        owner: "{{ user_name }}"
        group: "{{ group_name }}"
    - name: restart tomcat
      ansible.builtin.systemd:
        name: tomcat
        enabled: true
        state: restarted